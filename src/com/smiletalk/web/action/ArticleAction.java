/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smiletalk.web.action;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.smiletalk.domain.Article;
import com.smiletalk.domain.User;
import com.smiletalk.service.inter.ArticleServiceInter;
import com.smiletalk.web.form.ArticleForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-12-2013
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class ArticleAction extends DispatchAction {

	private ArticleServiceInter articleService;
	
	public void setArticleService(ArticleServiceInter articleService) {
		this.articleService = articleService;
	}
	
	public ActionForward myArticleUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		User user=(User) request.getSession().getAttribute("user");
		
		List articleList=articleService.getResult("from Article where user.userId=?", new Object[]{Integer.valueOf(user.getUserId())});
		request.setAttribute("articleList", articleList);
		
		return mapping.findForward("goMyArticleUI");
	}
	
	public ActionForward addArticleUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		
		return mapping.findForward("goAddArticleUI");
	}
	
	public ActionForward oneArticleUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ArticleForm articleForm=(ArticleForm) form;
		Article article =new Article();
		article.setTitle(articleForm.getTitle());
		article.setContent(articleForm.getContent());
		article.setIndate(new Date());
		
		User user=(User) request.getSession().getAttribute("user");
	    article.setUser(user);
		
	    articleService.save(article); 
	    request.setAttribute("article", article);
		return mapping.findForward("goOneArticleUI");
	}
}