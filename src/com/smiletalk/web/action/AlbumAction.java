/*
  * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smiletalk.web.action;

import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.smiletalk.domain.Album;
import com.smiletalk.domain.Photo;
import com.smiletalk.domain.User;
import com.smiletalk.service.inter.AlbumServiceInter;
import com.smiletalk.utils.myTools;
import com.smiletalk.web.form.AlbumForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-04-2013
 * 
 * XDoclet definition:
 * @struts.action parameter="flag"
 */
public class AlbumAction extends DispatchAction {
	
	private AlbumServiceInter albumService;
	
	public ActionForward myAlbumUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		User user=(User) request.getSession().getAttribute("user");
		
		
		List albumList=albumService.getResult("from Album where user.userId=?", new Object[]{Integer.valueOf(user.getUserId())});
		request.setAttribute("albumList", albumList);
				
		return mapping.findForward("goMyAlbumUI");
	}
	
	public ActionForward addAlbumUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		return mapping.findForward("goAddAlbumUI");
	}
	
	public ActionForward addPhotoUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		AlbumForm albumForm=(AlbumForm)form;
		
		Album album=new Album();
		album.setAlDescription(albumForm.getDescript());
        album.setAlName(albumForm.getName());
        album.setAlUpdate(new Date());
        album.setAlIndate(new Date());
        
        User user=(User) request.getSession().getAttribute("user");
        album.setUser(user);//set the ablum belong to whom
		albumService.save(album);
		
		request.setAttribute("album", album);
		
		
		return mapping.findForward("goAddPhotoUI");
	}
	
	public ActionForward viewoneAlbum(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		String aid=request.getParameter("aid");
		List photoList=albumService.getResult("from Photo where album.id=?", new Object[]{Integer.valueOf(aid)});
		request.setAttribute("photoList", photoList);
		
		return mapping.findForward("goOneAlbumUI");
	}
	

	public ActionForward oneAlbumUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		//jump to this album
		AlbumForm albumForm=(AlbumForm)form;
		User user=(User) request.getSession().getAttribute("user");
		
		
		
		FormFile photo1=albumForm.getPhoto1();
		
		if(!"".equals(photo1.getFileName())){
			//user upload first ablum
			//upload picture
			//save to database
			
			String newFileName=myTools.uploadPhoto(request, photo1,user.getUserId()+"" , albumForm.getId());
			Photo myPhoto1=new Photo();
			myPhoto1.setPIndate(new Date());
			//the photo belong to which album
			myPhoto1.setAlbum((Album)albumService.findById(Album.class, Integer.valueOf(albumForm.getId())));
			myPhoto1.setPPhoto(newFileName);		
			albumService.save(myPhoto1);			
		}
		
		FormFile photo2=albumForm.getPhoto2();		
		if(!"".equals(photo2.getFileName())){			
			String newFileName=myTools.uploadPhoto(request, photo2,user.getUserId()+"" , albumForm.getId());
			Photo myPhoto2=new Photo();
			myPhoto2.setPIndate(new Date());
			//the photo belong to which album
			myPhoto2.setAlbum((Album)albumService.findById(Album.class, Integer.valueOf(albumForm.getId())));
			myPhoto2.setPPhoto(newFileName);		
			albumService.save(myPhoto2);		
		}
		
		FormFile photo3=albumForm.getPhoto3();		
		if(!"".equals(photo3.getFileName())){			
			String newFileName=myTools.uploadPhoto(request, photo3,user.getUserId()+"" , albumForm.getId());
			Photo myPhoto3=new Photo();
			myPhoto3.setPIndate(new Date());
			//the photo belong to which album
			myPhoto3.setAlbum((Album)albumService.findById(Album.class, Integer.valueOf(albumForm.getId())));
			myPhoto3.setPPhoto(newFileName);		
			albumService.save(myPhoto3);		
		}
		
		FormFile photo4=albumForm.getPhoto4();		
		if(!"".equals(photo4.getFileName())){			
			String newFileName=myTools.uploadPhoto(request, photo4,user.getUserId()+"" , albumForm.getId());
			Photo myPhoto4=new Photo();
			myPhoto4.setPIndate(new Date());
			//the photo belong to which album
			myPhoto4.setAlbum((Album)albumService.findById(Album.class, Integer.valueOf(albumForm.getId())));
			myPhoto4.setPPhoto(newFileName);		
			albumService.save(myPhoto4);		
		}
		
		FormFile photo5=albumForm.getPhoto5();		
		if(!"".equals(photo5.getFileName())){			
			String newFileName=myTools.uploadPhoto(request, photo5,user.getUserId()+"" , albumForm.getId());
			Photo myPhoto5=new Photo();
			myPhoto5.setPIndate(new Date());
			//the photo belong to which album
			myPhoto5.setAlbum((Album)albumService.findById(Album.class, Integer.valueOf(albumForm.getId())));
			myPhoto5.setPPhoto(newFileName);		
			albumService.save(myPhoto5);		
		}
		
		//photo to be shown to the list 
		//Album curAlbum=(Album) albumService.findById(Album.class,Integer.valueOf(albumForm.getId()) );
		//Set photoList=  curAlbum.getPhotos();
		List photoList=albumService.getResult("from Photo where album.id=?", new Object[]{Integer.valueOf(albumForm.getId())});
		request.setAttribute("photoList", photoList);
		
		
		return mapping.findForward("goOneAlbumUI");
	}
	
	public ActionForward onePhotoUI(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		String uid=request.getParameter("uid");
		String pid=request.getParameter("pid");
		String pP=request.getParameter("pP");
		
		
		
		request.setAttribute("uid",uid);
		request.setAttribute("pid",pid);
		request.setAttribute("pP",pP);
				
		return mapping.findForward("goOnePhotoUI");
	}
	
	public void setAlbumService(AlbumServiceInter albumService) {
		this.albumService = albumService;
	}
	
}